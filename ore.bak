    /**
     * @Author:        Kabelo Masemola
     * @date:          14 November 2015
     * @title:         JOre
     *
     * @Description:   This is a VERY simple JS library that mimics JQuery syntax style (method chaining).
     *                 JOre is a scaled down alternative to JQuery I specifically made for jobmail feature site,
     *                 for the manipulation of visual elements.
     *
     * @Goal:          To create a simple javascript library that can give the jobmail development team the same
     *                 functionalities that JQuery offers on the featuresite.
     */


    /**
     *This is the constructor for the library's function/object
     * @param id
     * @returns {*}
     */
    function $jore(id){
        error = {
            message : "The JOre constructor takes in an element ID as a  parameter,You have invoked $jore without an element ID"
        };
        if(id){
        /*
        * This 'if' checks if the this is the global scope and recursively calls the constructor with the 'new' keyword
        * This is to achieve object internal scope so that all methods called can be of the $jore object not the global scope    *
        */
        if(window === this){
            return $jore(id);
        }
         this.element = document.getElementById(id);
        /*The object must return itself to allow method chaining*/
        return this;
        }
        else{
            return error;
        }
    }

    $jore.prototype = {
        hide: function(){
            this.element.style.display = 'none';
            return this;
        },
        show: function(){
            this.element.style.display = 'inherit';
            return this;
        },
        backgroudColor : function(color){
            this.element.style.background = color;
            return this;
        },
        toggle : function(){
            if (this.element.style.display !== 'none') {
                this.element.style.display = 'none';
            } else {
                this.element.style.display = '';
            }
            return this;
        },
        size: function(height,width){
            this.element.style.height = height + 'px';
            this.element.style.width = width + 'px';
        },
        val: function(newVal){
            this.element.value = newVal;
        }
    }